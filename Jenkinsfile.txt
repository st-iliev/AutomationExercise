pipeline {
    agent any
 stages {
        stage('Checkout') {
            steps {
                // Clone the GitHub repository
                checkout scm
            }
        }
    stages {
        stage('Build') {
            steps {
                // Restore dependencies
                bat 'dotnet restore "Automation Exercise.sln"'
                
                // Build the project
                bat 'dotnet build "Automation Exercise.sln" --configuration Release'
            }
        }

        stage('Run Tests') {
            steps {
                script {
                    
                     bat 'start "" "C:\\chromdriver\\chrome-win64\\chrome.exe"'

                    // Wait for ChromeDriver to initialize
                    sleep(time: 20, unit: 'SECONDS')

                    // Run the tests
                    try {
                        bat 'dotnet test "Automation Exercise/AutomationExercise.csproj" --configuration Release'
                    } catch (Exception e) {
                        echo 'Tests failed: ' + e.getMessage()
                        currentBuild.result = 'FAILURE'
                    }
                }
            }
        }
    }

    post {
        always {
            // Terminate ChromeDriver process after tests
            script {
                try {
                    bat 'taskkill /F /IM chrome.exe /T'
                } catch (Exception e) {
                    echo 'Error during ChromeDriver process termination: ' + e.getMessage()
                }
            }
        }
    }
}

}
